CREATE TABLE Base(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
)

CREATE TABLE User(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    NAME VARCHAR(200) NOT NULL,
    EMAIL VARCHAR(60)NOT NULL,
    PASSWORD VARCHAR(23)NOT NULL,
    PHONE_NUMBER INT NOT NULL,
    CPF VARCHAR(11) UNIQUE NOT NULL
)

CREATE TABLE Category_Establishment(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    NAME VARCHAR(50) NOT NULL,
    DESCRIPTION VARCHAR(200) NOT NULL
)

CREATE TABLE Category_Product(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    NAME VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(200) NOT NULL
)

CREATE TABLE Restaurant(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    NAME VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(200)
    PHONE_NUMBER INT NOT NULL,
    CNPJ VARCHAR(14) NOT NULL,
    RATE INT
)

CREATE TABLE Operation_Restaurant(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    DAY INT,
    OPEN TIME INT,
    CLOSING TIME INT
)

CREATE TABLE Address(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    ROAD VARCHAR(200) NOT NULL,
    NEIGHBORHOOD VARCHAR(50) NOT NULL,
    CITY VARCHAR(80) NOT NULL,
    ZIP_CODE VARCHAR(8),
    NUMBER INT NOT NULL,
    COMPLEMENT VARCHAR(130),
    PATTERN INT
)

CREATE TABLE Product(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    NAME VARCHAR(60) NOT NULL,
    PRICE INT NOT NULL,
    DESCRIPTION VARCHAR(200)
)

CREATE TABLE Additional(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    NAME VARCHAR(60) NOT NULL,
    VALUE INT,
    DESCRIPTION VARCHAR(200)
)

CREATE TABLE Product_Additional(
)

CREATE TABLE Favorite(
)

CREATE TABLE Stats_Delivery(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    NAME VARCHAR(80),
    DESCRIPTION(200)
)

CREATE TABLE Coupon(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    CODE VARCHAR(10) NOT NULL,
    VALUE INT NOT NULL,
    VALIDITY INT NOT NULL,
    DESCRIPTION VARCHAR(200)
)

CREATE TABLE Delivery(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    DELIVERY_FEE INT,
    AMOUNT INT,
    IS_REMOVAL INT,
    DESCRIPTION VARCHAR(200),
)

CREATE TABLE Delivery_Product(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
)

CREATE TABLE Additional_Product_Delivery(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    AMOUNT INT,
)

CREATE TABLE Rate(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    RESTAURANT_RATE INT,
    DELIVERY_RATE INT,
    DESCRIPTION VARCHAR(200)
)

CREATE TABLE Historic_Delivery(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
)

CREATE TABLE Stats_Pay(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    NAME VARCHAR(150),
    DESCRIPTION VARCHAR(200),
)

CREATE TABLE Method_Pay(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    NAME VARCHAR(150),
    DESCRIPTION VARCHAR(200),
)

CREATE TABLE Payment(
    ID INT PRIMARY KEY NOT NULL,
    STATS INT,
    DATA CREATE INT,
    VALUE INT NOT NULL,
    DATE_HOUR INT,
)

/* OPERATION_RESTAURANT */
ALTER TABLE Operation_Restaurant
ADD CONSTRAINT FK_ID_RESTAURANT FOREIGN KEY (ID_RESTAURAT) REFERENCES Restaurant (ID);

/* RESTAURANT */
ALTER TABLE Restaurant
ADD CONSTRAINT FK_CATEGORY_EST FOREIGN KEY (CATEG_ESTAB_FK) REFERENCES Category_Establishment;

/* ADDRESS */
ALTER TABLE Address
ADD CONSTRAINT FK_ID_USER FOREIGN KEY (ID_USER) REFERENCES User (ID);
ALTER TABLE Address
ADD CONSTRAINT FK_ID_RESTAURANT FOREIGN KEY (ID_RESTAURAT) REFERENCES Restaurant (ID);

/* PRODUCT */
ALTER TABLE Product
ADD CONSTRAINT FK_CATEGORY_PRO FOREIGN KEY (CATEG_PROD_FK) REFERENCES Category_Product;
ALTER TABLE Product
ADD CONSTRAINT FK_ID_RESTAURANT FOREIGN KEY (ID_RESTAURAT) REFERENCES Restaurant (ID);

/* PRODUCT_ADDITIONAL */
ALTER TABLE Product_Additional
ADD CONSTRAINT FK_ID_PRODUCT FOREIGN KEY (ID_PROD) REFERENCES Product (ID);
ALTER TABLE Product_Additional
ADD CONSTRAINT FK_ID_ADDITIONAL FOREIGN KEY (ID_ADD) REFERENCES Additional (ID); 

/* FAVORITE */
ALTER TABLE Favorite
ADD CONSTRAINT FK_ID_USER FOREIGN KEY (ID_USR) REFERENCES User (ID);
ALTER TABLE Favorite
ADD CONSTRAINT FK_ID_RESTAURANT FOREIGN KEY (ID_RESTAURAT) REFERENCES Restaurant (ID);

/* DELIVERY */
ALTER TABLE Delivery
ADD CONSTRAINT FK_ID_ADDRESS FOREIGN KEY (ID_ADRES) REFERENCES Address (ID);
ALTER TABLE Delivery
ADD CONSTRAINT FK_ID_USER FOREIGN KEY (ID_USR) REFERENCES User (ID);
ALTER TABLE Delivery
ADD CONSTRAINT FK_ID_RESTAURANT FOREIGN KEY (ID_RESTAURAT) REFERENCES Restaurant (ID);
ALTER TABLE Delivery
ADD CONSTRAINT FK_ID_COUPON FOREIGN KEY (ID_CUPON) REFERENCES Coupon (ID);
ALTER TABLE Delivery
ADD CONSTRAINT FK_ID_STATS FOREIGN KEY (ID_STAT) REFERENCES Stats_Delivery (ID);

/* DELIVERY_PRODUCT */
ALTER TABLE Delivery_Product
ADD CONSTRAINT FK_ID_DELIVERY FOREIGN KEY (DELIVE_ID) REFERENCES Delivery (ID);
ALTER TABLE Delivery_Product
ADD CONSTRAINT FK_ID_PRODUCT FOREIGN KEY (ID_PROD) REFERENCES Product (ID);

/* ADDITIONAL_PRODUCT_DELIVERY */
ALTER TABLE Additional_Product_Delivery
ADD CONSTRAINT FK_ID_DELIVERY_PRODUCT FOREIGN KEY (ID_DELIV_PRODUCT) REFERENCES Delivery_Product (ID);
ALTER TABLE Additional_Product_Delivery
ADD CONSTRAINT FK_ID_ADDITIONAL FOREIGN KEY (ID_ADD) REFERENCES Additional (ID); 

/* RATE */
ALTER TABLE Rate
ADD CONSTRAINT FK_ID_DELIVERY FOREIGN KEY (DELIVE_ID) REFERENCES Delivery (ID);

/* HISTORIC_DELIVERY */
ALTER TABLE Historic_Delivery
ADD CONSTRAINT FK_ID_DELIVERY FOREIGN KEY (DELIVE_ID) REFERENCES Delivery (ID);
ALTER TABLE Historic_Delivery
ADD CONSTRAINT FK_ID_STATS FOREIGN KEY (STAT_ID) REFERENCES Stats_Delivery (ID);

/* PAYMENT */
ALTER TABLE Payment
ADD CONSTRAINT FK_ID_DELIVERY FOREIGN KEY (DELIVE_ID) REFERENCES Delivery (ID);
ALTER TABLE Payment
ADD CONSTRAINT FK_ID_METHOD_PAY FOREIGN KEY (METOD_PAY) REFERENCES Method_Pay (ID);
ALTER TABLE Payment
ADD CONSTRAINT FK_ID_STATS_PAY FOREIGN KEY (STAT_PAY) REFERENCES Stats_Pay (ID);